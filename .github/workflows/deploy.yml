name: Deploy on Tag

on:
  push:
    tags:
      - 'v*'  # Nur Tags, z.B. v1.0.0

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      # 1️⃣ Repository auschecken
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2️⃣ SSH-Agent einrichten
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      # 3️⃣ Server-Hostkey bekannt machen (sicher)
      - name: Add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      # 4️⃣ Dateien auf Server kopieren, ohne node_modules und logs
      - name: Copy Project to Server
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "mkdir -p /home/${{ secrets.SERVER_USER }}/app/"
          rsync -av --exclude 'node_modules' --exclude 'logs' ./ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/home/${{ secrets.SERVER_USER }}/app/

      # 5️⃣ Deployment mit Docker Compose
      - name: Deploy with Docker Compose
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            cd /home/${{ secrets.SERVER_USER }}/app
            docker-compose -f docker-compose.prod.yml pull
            docker-compose -f docker-compose.prod.yml up -d --build --remove-orphans
            docker image prune -f
          EOF
