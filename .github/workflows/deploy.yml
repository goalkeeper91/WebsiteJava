name: Deploy on Tag

on:
  push:
    tags:
      - 'v*'  # Triggers on tags like v1.0.0, v1.0.1 etc.

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: üì¶ Checkout Repository
        uses: actions/checkout@v3

      - name: üîë Set up SSH Agent
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: üåê Add Server to Known Hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
      
      - name: üîç Debug SSH Connection
        run: |
          echo "Inhalt der known_hosts Datei:"
          cat ~/.ssh/known_hosts
          echo ""
          echo "Starte SSH-Verbindung mit ausf√ºhrlichem Debug-Log..."
          ssh -vvv -o StrictHostKeyChecking=yes ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "echo ‚úÖ SSH Verbindung erfolgreich"
          
      # üöÄ Start Deployment
      - name: üñ•Ô∏è Copy Project to Server
        run: |
          rsync -av --exclude 'node_modules' --exclude 'logs' \
          -e "ssh -o StrictHostKeyChecking=yes" \
          ./ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/home/${{ secrets.SERVER_USER }}/app/

      - name: üê≥ Deploy with Docker Compose
        run: |
          ssh -o StrictHostKeyChecking=yes ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            cd /home/${{ secrets.SERVER_USER }}/app
            /usr/libexec/docker/cli-plugins/docker-compose -f docker-compose.prod.yml pull
            /usr/libexec/docker/cli-plugins/docker-compose -f docker-compose.prod.yml up -d --build --remove-orphans
            /usr/libexec/docker/cli-plugins/docker-compose image prune -f
          EOF
