version: "3.9"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile  # Production-Dockerfile f√ºr Backend
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ./backend/.env
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    env_file:
      - ./frontend/.env
    networks:
      - app-network

  postgres:
    image: postgres:15
    env_file:
      - ./postgres/.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -q"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  proxy:
    image: nginx:stable-alpine
    container_name: nginx_proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/proxy.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certs:/etc/nginx/certs
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
