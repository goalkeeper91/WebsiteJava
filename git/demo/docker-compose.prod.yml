version: "3.9"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile  # Production-Dockerfile für Backend
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs           # Persistente Logs
      - ./backend/.env:/app/.env:ro
    env_file:
      - ./backend/.env
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod  # Production-Dockerfile für Frontend
    ports:
      - "80:80"                    # Public Port für Browser
    volumes:
      - ./frontend/.env:/app/.env:ro
    env_file:
      - ./frontend/.env
    networks:
      - app-network

  postgres:
    image: postgres:15
    env_file:
      - ./postgres/.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -q"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
