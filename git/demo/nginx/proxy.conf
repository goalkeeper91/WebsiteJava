    # Der Nginx-Server f√ºr die Handhabung von HTTP- und HTTPS-Anfragen

    # === HTTP-Server (Weiterleitung zu HTTPS) ===
    server {
        listen 80;
        listen [::]:80;
        server_name goalkeeper91.de www.goalkeeper91.de;

        # Leitet den gesamten HTTP-Verkehr auf HTTPS um, mit Ausnahme des Validierungspfads
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Restlicher HTTP-Verkehr wird umgeleitet
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # === HTTPS-Server (Hauptserver) ===
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        server_name goalkeeper91.de www.goalkeeper91.de;

        # === SSL/TLS-Konfiguration ===
        # Pfade zu den SSL-Zertifikaten von Let's Encrypt.
        ssl_certificate /etc/nginx/certs/live/goalkeeper91.de/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/live/goalkeeper91.de/privkey.pem;

        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 5m;
        ssl_ciphers "HIGH:!aNULL:!MD5:!RC4";
        ssl_protocols TLSv1.2 TLSv1.3;

        # === React Frontend ===
        location / {
            proxy_pass http://frontend:80;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # === Spring Boot Backend ===
        location /api/ {
            rewrite ^/api(.*) /$1 break;
            proxy_pass http://backend:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /auth/ {
                proxy_pass http://backend:8080/auth/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

        # Leitet 404-Fehler zum Frontend-Index, damit das React-Routing funktioniert.
        error_page 404 /index.html;
    }
